{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1V3E2I4l5-HG2IakcJ5VpY4uSIGguJs_G","timestamp":1729570022803}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#### Exercise 1\n","1. Prompt the user to enter five key:value pairs. This could be employee_id and employee_name. For example:\n","\n","{1:'Bob',23:'Joe',3:'Sam'}\n","\n","2. Display the employees in ascending order of their names."],"metadata":{"id":"6iaUKywMWLnt"}},{"cell_type":"code","source":["employees = {}\n","\n","for _ in range(5):\n","    key = input(\"Enter employee id (key): \")\n","    name = input(\"Enter employee name (value): \")\n","    employees[key] = name\n","\n","sorted_employees = dict(sorted(employees.items(), key=lambda item: item[1]))\n","\n","print(\"Employees sorted by name:\")\n","for id, name in sorted_employees.items():\n","    print(f\"ID: {id}, Name: {name}\")"],"metadata":{"id":"lQOayNwEWMKe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729570758137,"user_tz":420,"elapsed":83566,"user":{"displayName":"Mohammed Jibran Akhter","userId":"06929352667515001127"}},"outputId":"89c57254-c891-4186-d7cd-f851ae091607"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter employee id (key): 1\n","Enter employee name (value): Bob\n","Enter employee id (key): 2\n","Enter employee name (value): Joe\n","Enter employee id (key): 3\n","Enter employee name (value): Sam\n","Enter employee id (key): 4\n","Enter employee name (value): Josh\n","Enter employee id (key): 5\n","Enter employee name (value): Tranh\n","Employees sorted by name:\n","ID: 1, Name: Bob\n","ID: 2, Name: Joe\n","ID: 4, Name: Josh\n","ID: 3, Name: Sam\n","ID: 5, Name: Tranh\n"]}]},{"cell_type":"markdown","metadata":{"id":"6gvwEt4SNix_"},"source":["#### Exercise 2\n","\n","\n","1. Prompt the user to enter five key:value pairs. This could be employee_id and employee_name. For example:\n","\n","{1:'Bob',23,'Joe',3:'Sam'}\n","\n","2. Display the employees in ascending order of their names.\n","\n","(note above steps are from problem 1)\n","\n","3. Start a While loop and ask the user to enter a new key and employee name, to add to the dictionary. From within the While loop, check if the key already exists and if it exists, display a message indicating the Key already exists; otherwise, proceed to add the new id and key to the dictionary. If the user enters an id of -1 break from the While loop\n"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"8eSDaJC8WC1l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729570925589,"user_tz":420,"elapsed":45185,"user":{"displayName":"Mohammed Jibran Akhter","userId":"06929352667515001127"}},"outputId":"61b95853-4ddf-4179-80c6-e582c93e6da3"},"outputs":[{"name":"stdout","output_type":"stream","text":["Enter employee id (key): 1\n","Enter employee name (value): Josh\n","Enter employee id (key): 2\n","Enter employee name (value): Joe\n","Enter employee id (key): 3\n","Enter employee name (value): Bob\n","Enter employee id (key): 4\n","Enter employee name (value): Seth\n","Enter employee id (key): 5\n","Enter employee name (value): Roman\n","Employees sorted by name:\n","ID: 3, Name: Bob\n","ID: 2, Name: Joe\n","ID: 1, Name: Josh\n","ID: 5, Name: Roman\n","ID: 4, Name: Seth\n","Enter a new employee id (key), or -1 to quit: -1\n"]}],"source":["employees = {}\n","\n","for _ in range(5):\n","    key = input(\"Enter employee id (key): \")\n","    name = input(\"Enter employee name (value): \")\n","    employees[key] = name\n","\n","sorted_employees = dict(sorted(employees.items(), key=lambda item: item[1]))\n","print(\"Employees sorted by name:\")\n","for id, name in sorted_employees.items():\n","    print(f\"ID: {id}, Name: {name}\")\n","\n","while True:\n","    new_key = input(\"Enter a new employee id (key), or -1 to quit: \")\n","\n","    if new_key == \"-1\":\n","        break\n","\n","    if new_key in employees:\n","        print(f\"Key {new_key} already exists. Try again.\")\n","    else:\n","        new_name = input(\"Enter employee name (value): \")\n","        employees[new_key] = new_name\n","\n","        sorted_employees = dict(sorted(employees.items(), key=lambda item: item[1]))\n","        print(\"Updated Employees sorted by name:\")\n","        for id, name in sorted_employees.items():\n","            print(f\"ID: {id}, Name: {name}\")"]},{"cell_type":"markdown","source":["Exercise 3\n","Accept two separate dictionaries of integers from the user. It could be the same employee id: employee_name dictionary from Exercise 1.\n","\n","Write a Python script to concatenate the two dictionaries to create a new one\n","\n","Display the resulting dictionary"],"metadata":{"id":"qhw7VlWR-w_K"}},{"cell_type":"code","source":["employees_1 = {}\n","employees_2 = {}\n","\n","print(\"Enter values for the first dictionary:\")\n","for _ in range(5):\n","    key = input(\"Enter employee id (key): \")\n","    name = input(\"Enter employee name (value): \")\n","    employees_1[key] = name\n","\n","print(\"Enter values for the second dictionary:\")\n","for _ in range(5):\n","    key = input(\"Enter employee id (key): \")\n","    name = input(\"Enter employee name (value): \")\n","    employees_2[key] = name\n","\n","combined_employees = {**employees_1, **employees_2}\n","\n","print(\"Combined dictionary of employees:\")\n","for id, name in combined_employees.items():\n","    print(f\"ID: {id}, Name: {name}\")"],"metadata":{"id":"6HKBvliK_nyb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729571400585,"user_tz":420,"elapsed":265835,"user":{"displayName":"Mohammed Jibran Akhter","userId":"06929352667515001127"}},"outputId":"e11dbc0c-ed83-4f4d-fddf-28feb818aec6"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter values for the first dictionary:\n","Enter employee id (key): 1\n","Enter employee name (value): Joe\n","Enter employee id (key): 2\n","Enter employee name (value): Bob\n","Enter employee id (key): 3\n","Enter employee name (value): Josh\n","Enter employee id (key): 4\n","Enter employee name (value): Seth\n","Enter employee id (key): 5\n","Enter employee name (value): Roman\n","Enter values for the second dictionary:\n","Enter employee id (key): 6\n","Enter employee name (value): Rock\n","Enter employee id (key): 7\n","Enter employee name (value): Reagan\n","Enter employee id (key): 8\n","Enter employee name (value): John\n","Enter employee id (key): 9\n","Enter employee name (value): Brock\n","Enter employee id (key): 10\n","Enter employee name (value): Maeve\n","Combined dictionary of employees:\n","ID: 1, Name: Joe\n","ID: 2, Name: Bob\n","ID: 3, Name: Josh\n","ID: 4, Name: Seth\n","ID: 5, Name: Roman\n","ID: 6, Name: Rock\n","ID: 7, Name: Reagan\n","ID: 8, Name: John\n","ID: 9, Name: Brock\n","ID: 10, Name: Maeve\n"]}]}]}